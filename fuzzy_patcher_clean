#!/usr/bin/env python3

import json
import sys


def readJSONFile(path):
    with open(path) as f:
        return json.load(f)


def writeJSONFile(path, data):
    with open(path, 'w') as f:
        json.dump(data, f, indent=2)


def addSpacesEveryN(data, n):
    new = ''

    for i in range(0, len(data), n):
        new += data[i:i+n] + ' '

    # Remove trailing spaces (at the end)

    new = new.strip()

    # Check that our new string is equal to the original
    # stripped of spaces

    stripped = new.replace(' ', '')

    if stripped == data:
        return new
    else:
        return False


def clean(data):
    patches = data['patches']

    patch_info = {}

    for patch in patches:
        pattern = patch['patternBytes'].replace(' ', '')

        index = int(patch['patchOffset']) * 2

        patched = patch['patchBytes'].replace(' ', '')

        patched_len = len(patched)

        offset = f'0x{patch["comment"].split()[-1]}'

        patch_info[offset] = {
            'pattern': addSpacesEveryN(pattern, 2),
            'original': addSpacesEveryN(pattern[index:index+patched_len], 2),
            'patched': addSpacesEveryN(patched, 2),
            'index': index // 2
        }

    return patch_info


def main(args):
    if len(args) == 3:
        in_path = args[1]
        out_path = args[2]

        file_data = readJSONFile(in_path)

        cleaned = clean(file_data)

        writeJSONFile(out_path, cleaned)

    else:
        print('Usage: <fuzzy_patcher json> <new (cleaned)>')


if __name__ == '__main__':
    main(sys.argv)
